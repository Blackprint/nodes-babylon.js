!async function(e,t){"use strict";t.exports&&t.exports!==globalThis&&Object.defineProperty(t.exports,"__esModule",{value:!0}),e.templates||(e.templates={});var s=sf.dom||sf.$,a=e.templates;e._sf_internal=e._sf_internal||{body_map:{},_replace(e,t){let a=s(t);return this.body_map[e]&&this.body_map[e].remove(),this.reinitViews&&this.reinitViews(a),this.body_map[e]=a},append(e,t){s(document.body).append(this._replace.apply(this,arguments))},prepend(e,t){s(document.body).prepend(this._replace.apply(this,arguments))}};let p=e.Blackprint.loadScope({url:import.meta.url}),l=sf.$,n=await p.getContext("Babylon.js");a["BPIC/Babylon.js/Engine/Create/Canvas.sf"]='<div class="node your-class" style="transform: translate({{x}}px, {{y}}px)"><sf-template path="Blackprint/nodes/template/routes.sf"></sf-template><sf-template path="Blackprint/nodes/template/header.sf"></sf-template><div class="content"><div class="left-port"><sf-template path="Blackprint/nodes/template/input-port.sf"></sf-template></div><div class="right-port"><sf-template path="Blackprint/nodes/template/output-port.sf"></sf-template></div></div><sf-template path="Blackprint/nodes/template/other.sf"></sf-template></div>',p.Sketch.registerInterface("BPIC/Babylon.js/Engine/Create/Canvas",class extends n.IFace.EngineCreateCanvas{init(e){l(this.canvas).insertBefore(this.$el(".left-port")[0])}})}("undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:this,"undefined"!=typeof module?module:{exports:this});
//# sourceMappingURL=nodes-babylonjs.sf.mjs.map